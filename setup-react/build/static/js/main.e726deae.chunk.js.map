{"version":3,"sources":["components/Login.js","components/Register.js","components/Newjournal.js","components/Quoteitem.js","components/Tabs.js","components/Profile.js","components/Journal.js","components/Survey.js","components/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["Login","useState","email_or_username","setName","password","setPassword","is_contributor","history","useHistory","useForm","register","handleSubmit","errors","Form","className","onSubmit","data","console","log","Button","href","FormGroup","Label","value","ref","required","name","placeholder","onChange","e","target","style","fontSize","color","Password","onClick","a","login","JSON","stringify","fetch","method","headers","body","then","response","status","push","catch","error","type","Register","email","setEmail","username","setUsername","first_name","setFirst_name","last_name","setLast_name","Email","text","Newjournal","title","setTitle","setBody","Input","Component","Tabs","paddingTop","paddingLeft","textAlign","Profile","Journal","Survey","Homepage","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e726deae.chunk.js","sourcesContent":["import React, { Component, useState } from \"react\";\nimport {Button, Form, FormGroup, Label, Input} from 'reactstrap';\nimport {useHistory} from 'react-router-dom';\nimport {useForm} from 'react-hook-form';\n\n\n\nexport const Login = () => {\n    const [email_or_username, setName] = useState('');\n    const [password, setPassword] = useState('');\n   //const [emailError, setEmailError] = useState('Email Required');\n   //<div style={{fontSize:  12, color: \"red\"}}>{emailError}</div>\n    const [is_contributor, setContributor] = useState(false);\n    //var ref = \"/\";\n    const history = useHistory();\n    const {register, handleSubmit, errors} = useForm();\n    const onSubmit = data => {\n        console.log(data);\n    };\n\n    const validateUserName = async (value) => {\n\n    }\n    return(\n        <div> \n            <Form className=\"login-form\" onSubmit = {handleSubmit(onSubmit)}>\n                <h1>\n                <div className=\"text-right\">\n                    <Button\n                        href=\"/register\"\n                        className=\" btn-dark text-right\">\n                        sign up\n                    </Button>\n                </div>\n                <span className=\"font-weight-bold\">Mindify</span>\n                </h1>\n                <FormGroup>\n                    <Label>Username or Email</Label>\n                    <h2></h2>\n                    <div className=\"field\">\n                    <input \n                        value={email_or_username} \n                        ref = {register({required: true})}\n                        name = \"email_or_username\"\n                        placeholder = \"Username or Email\" \n                        onChange={e => setName(e.target.value)}/>\n                    </div>\n                    <div style={{fontSize: 11, color: \"red\"}}>{errors.email_or_username && <p>Required</p>}</div>\n                </FormGroup>\n\n                <FormGroup>\n                    <label>Password</label>\n                    <h2></h2>\n                    <div className=\"field\">\n                    <input \n                        value={password} \n                        name = \"Password\"\n                        placeholder = \"Password\"\n                        ref = {register({required: true})}\n                        onChange={e => setPassword(e.target.value)}/>    \n                    </div>  \n                    <div style={{fontSize: 11, color: \"red\"}}>{errors.Password && <p>Required</p>}</div>          \n                </FormGroup>\n                \n                <Button onClick={async () =>{\n                    //handleSubmit();\n                     const login = {email_or_username, password, is_contributor};\n                     console.log(JSON.stringify(login));\n                     const response = await fetch('http://127.0.0.1:5000/api/login', {\n                         method: 'POST',\n                         headers:{\n                            'Content-Type': 'application/json'\n                         },\n                         body: JSON.stringify(login)\n                     })\n                     .then(response => {\n                         console.log(response.status);\n                         if (response.status === 201) {\n                            console.log(\"Successful Login\"); \n                            const ref=\"/homepage\";\n                            console.log(ref);\n                            history.push(ref);\n                            //redirect to home page\n                         }\n                         else if (response.status === 204) {\n                            console.log(\"Invalid Username or Password or Incorrect Permissions\");\n                            const ref=\"/\";\n                            console.log(ref);\n                            history.push(ref);\n                            // reload login page\n                         }\n                     })\n                     .catch(error => console.log(error))\n                    \n                    }}\n                    //href = \"/\"\n                    className=\"btn-lg btn-dark btn-block\"\n                    type = \"submit\">\n                    Log in</Button>\n            </Form>\n        </div>\n    )\n    /*return (           \n        <div> \n            <Form className=\"login-form\" onSubmit = {handleSubmit(onSubmit)}>\n                <h1>\n                <div className=\"text-right\">\n                    <Button\n                        href=\"/register\"\n                        className=\" btn-dark text-right\">\n                        sign up\n                    </Button>\n                </div>\n                <span className=\"font-weight-bold\">Mindify</span>\n                </h1>\n                <FormGroup>\n                    <Label>Username or Email</Label>\n                    <h2></h2>\n                    <Input \n                        value={email_or_username} \n                        ref = {register({required: true})}\n                        name = \"Username or Email\"\n                        placeholder = \"Username or Email\" \n                        onChange={e => setName(e.target.value)}/>\n                </FormGroup>\n            \n                <FormGroup>\n                    <label>Password</label>\n                    <h2></h2>\n                    <Input \n                        value={password} \n                        name = \"Password\"\n                        placeholder = \"Password\"\n                        ref = {register}\n                        onChange={e => setPassword(e.target.value)}/>\n                </FormGroup>\n\n                <FormGroup>\n                    <div className=\"text-center\">\n                    <Input \n                        type=\"checkbox\"\n                        value={is_contributor}\n                        onChange={e => setContributor(e.target.checked)}/>\n                        Contributor\n                    </div>                    \n                </FormGroup>\n                \n                \n                <Button onClick={async () =>{\n                    //handleSubmit();\n                     const login = {email_or_username, password, is_contributor};\n                     console.log(JSON.stringify(login));\n                     const response = await fetch('http://127.0.0.1:5000/api/login', {\n                         method: 'POST',\n                         headers:{\n                            'Content-Type': 'application/json'\n                         },\n                         body: JSON.stringify(login)\n                     })\n                     .then(response => {\n                         console.log(response.status);\n                         if (response.status === 201) {\n                            console.log(\"Successful Login\"); \n                            const ref=\"/homepage\";\n                            console.log(ref);\n                            history.push(ref);\n                            //redirect to home page\n                         }\n                         else if (response.status === 204) {\n                            console.log(\"Invalid Username or Password or Incorrect Permissions\");\n                            const ref=\"/\";\n                            console.log(ref);\n                            history.push(ref);\n                            // reload login page\n                         }\n                     })\n                     .catch(error => console.log(error))\n                    \n                    }}\n                    href=\"/homepage\"\n                    className=\"btn-lg btn-dark btn-block\"\n                    type = \"submit\">\n                    Log in</Button>\n            </Form>\n        </div>);*/\n        \n\n}\n\n\n\n","import React, { Component, useState } from \"react\";\nimport {Button, Form, FormGroup, Label, Input} from 'reactstrap';\nimport {useForm} from 'react-hook-form';\n\nexport const Register = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n    const [first_name, setFirst_name] = useState('');\n    const [last_name, setLast_name] = useState('');\n    //var ref = \"/homepage\";\n    const {register, handleSubmit, errors} = useForm();\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n    return (           \n        <div> \n            <Form className=\"login-form\" onSubmit = {handleSubmit(onSubmit)}>\n                <div className=\"text-right\">\n                <Button \n                        href=\"/\"\n                        className=\" btn-dark text-right\">\n                        Log in\n                </Button>\n                </div>              \n                <h1>\n                <span className=\"font-weight-bold\">Register</span>\n                </h1>\n                <FormGroup>\n                    <Label>Email</Label>\n                    <h2></h2>\n                    <input \n                        value={email} \n                        placeholder = \"Email\" \n                        name = \"Email\"\n                        ref = {register({required: true})}\n                        onChange={e => setEmail(e.target.value)}/>\n                    <div style={{fontSize: 11, color: \"red\"}}>{errors.Email && <p>Required</p>}</div>\n                </FormGroup>\n\n                <FormGroup>\n                    <Label>Username</Label>\n                    <h2></h2>\n                    <input\n                        value={username} \n                        name = \"username\"\n                        ref = {register({required: true})}\n                        placeholder = \"Username\" \n                        onChange={e => setUsername(e.target.value)}/>\n                </FormGroup>\n\n                <FormGroup>\n                    <Label>First Name</Label>\n                    <h2></h2>\n                    <input\n                        value={first_name} \n                        placeholder = \"First Name\" \n                        name = \"first_name\"\n                        ref = {register({required: true})}\n                        onChange={e => setFirst_name(e.target.value)}/>\n                </FormGroup>\n\n                <FormGroup>\n                    <Label>Last Name</Label>\n                    <h2></h2>\n                    <input \n                        value={last_name} \n                        placeholder = \"Last Name\" \n                        name = \"last_name\"\n                        ref = {register({required: true})}\n                        onChange={e => setLast_name(e.target.value)}/>\n                </FormGroup>\n            \n                <FormGroup>\n                    <label>Password</label>\n                    <h2></h2>\n                    <input \n                        value={password} \n                        placeholder = \"Password\"\n                        name = \"password\"\n                        ref = {register({required: true})}\n                        onChange={e => setPassword(e.target.value)}/>\n                </FormGroup>  \n          \n                <Button onClick={async () =>{\n                     const register = {email, username, first_name, last_name, password};\n                     const response = await fetch('http://127.0.0.1:5000/api/register', {\n                         method: 'POST',\n                         headers:{\n                            'Content-Type': 'application/json'\n                         },\n                         body: JSON.stringify(register)\n                     })\n                     .then(response => { /*if status=409, then unsuccessful registration*/\n                         if (response.status === 409) {\n                             response.text().then((body) => {\n                                 console.log(body); \n                                 //ref = \"/register\";\n                                 /* body is either \"Email already linked \n                                                    to an account\" or \"Username Taken\" */\n                             });\n                            }   \n                         else { /* successful creation of account */\n                             console.log(\"Successful Registration\")\n                             //ref = \"/homepage\";\n                             /* redirect to the home page or login page here */\n                         }\n                     })\n\n                    }}\n                    //href={ref}\n                    className=\"btn-lg btn-dark btn-block\">\n                    Submit\n                    </Button>\n            </Form>\n        </div>);\n\n}","import React, { Component, useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nexport const Newjournal = () => {\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n\n    return (\n        <div>\n            <Form className=\"journal-form\">\n                <h1>\n                <span className=\"font-weight-bold\">New Journal</span>\n                </h1>\n                <FormGroup>\n                    <Label>Title</Label>\n                    <Input\n                        value={title}\n                        placeholder=\"Title\"\n                        onChange={e => setTitle(e.target.value)}/>\n                </FormGroup>\n\n                <FormGroup>\n                    <Label>Body</Label>\n                    <Input className=\"journalbody\"\n                        value={body}\n                        placeholder=\"Journal Body\"\n                        onChange={e => setBody(e.target.value)}/>\n                </FormGroup>\n            </Form>\n        </div>\n    );\n}","import React, { Component } from 'react'\n\nexport class Quoteitem extends Component {\n    render() {\n        return (\n            <div style = {{\n                color: 'green', \n                paddingTop: 50,\n                paddingLeft: 200,\n                paddingRight: 200,\n                textAlign: 'center',\n                fontSize: 20,\n                //font: 'fantasy'\n            }}>You Matter.\n            </div>\n        )\n    }\n}\n\nexport default Quoteitem\n","import React from 'react';\nimport {Button, Form, Label} from 'reactstrap';\n\nfunction Tabs() {\n  return (\n    <Form>\n      <div>\n      <h2 className=\"text-right\"><Button href=\"/\">Signout</Button></h2>\n        <h1 style = {{\n          paddingTop: 30,\n          paddingLeft: 0,\n          textAlign: \"left\"\n        }}>Mindify</h1>\n        <nav>\n            <Button href=\"/profile\">Profile</Button>\n            <h6></h6>\n            <Button href=\"/homepage\">Home</Button>\n            <h6></h6>\n            <Button href=\"/journal\">Journal</Button>\n            <h6></h6>\n            <Button href=\"/survey\">Survey</Button>\n            <h6></h6>         \n        </nav>\n      </div>\n    </Form>\n  )\n}\n\nexport default Tabs\n","import React from 'react'\nimport Tabs from './Tabs';\n\nfunction Profile() {\n    return (\n        <div>\n            <Tabs/>\n            <h1 className=\"text-right\">Profile page</h1>\n        </div>\n    )\n}\n\nexport default Profile\n","import React from 'react'\nimport Tabs from './Tabs';\n\nfunction Journal() {\n    return (\n        <div>\n            <Tabs/>\n            <h1 className=\"text-right\">Journal page</h1>\n        </div>\n    )\n}\n\nexport default Journal\n","import React from 'react'\nimport Tabs from './Tabs';\n\nfunction Survey() {\n    return (\n        <div>\n            <Tabs/>\n            <h1 className=\"text-right\">Survey page</h1>\n        </div>\n    )\n}\n\nexport default Survey\n","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Quoteitem from './Quoteitem';\nimport {Button, Form, Label} from 'reactstrap';\nimport Tabs from './Tabs';\nimport Profile from './Profile';\nimport Journal from './Journal';\nimport Survey from './Survey';\n\n\nfunction Homepage() {\n    // state = {\n    //     quote: {\n    //         text: 'My dark days made me strong, or maybe I already was strong, and they made me prove it'\n    //     }\n    // }\n    return (\n        <div>\n            <Fragment>\n               <Tabs/>\n                <h1 className=\"text-right\">Home page</h1>\n             </Fragment>\n        </div>\n       /* <Fragment>\n        <BrowserRouter>\n          <Tabs />\n          <Switch>\n            <Route path=\"/profile\" component={Profile}/>\n            <Route path=\"/journal\" component={Journal}/>\n            <Route path=\"/survey\" component={Survey}/>\n          </Switch>\n        </BrowserRouter>\n      </Fragment>*/\n    );\n}\n\n\nexport default Homepage;\n","\nimport React, {useEffect, useState, Component} from 'react';\nimport './App.css';\nimport {NewUserInfo} from './components/NewUserInfo';\nimport {Login} from './components/Login';\nimport {Register} from './components/Register';\nimport NewJournal, { Newjournal } from './components/Newjournal';\nimport {Container} from \"semantic-ui-react\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Homepage from './components/Homepage';\nimport Tabs from './components/Tabs';\n//import Header from './components/Header';\nimport Journal from './components/Journal';\nimport Survey from './components/Survey';\nimport Profile from './components/Profile';\n\n\nfunction App(){\n    return (\n      <div className=\"login-form\">\n        <Switch>\n          <Route exact path=\"/\" component={Login}/>\n          <Route path=\"/register\" component={Register}/>\n          <Route path=\"/homepage\" component={Homepage}/>\n          <Route path=\"/profile\" component={Profile}/>\n          <Route path=\"/journal/entry\" component={Newjournal}/>\n          <Route path=\"/journal\" component={Journal}/>\n          <Route path=\"/survey\" component={Survey}/>\n        </Switch>\n      </div>\n\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}